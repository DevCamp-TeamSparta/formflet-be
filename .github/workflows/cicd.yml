name: cicd

on:
  push:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.12.1]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push for
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: jinu0729/studio-formflet:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: ssh connect & production for main
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.MAIN_HOST }}
          username: ${{ secrets.MAIN_USERNAME }}
          key: ${{ secrets.MAIN_PRIVATE_KEY }}
          port: ${{ secrets.MAIN_PORT }}
          script: |
            cd formflet
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }}
            docker stop server || true
            docker rm server || true
            docker system prune -a --volumes -f
            docker compose pull -q
            docker compose up --force-recreate --build -d --quiet-pull 2>log.out
            cat log.out

      - name: ssh connect & production for dev
        if: github.ref == 'refs/heads/develop'
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          key: ${{ secrets.DEV_PRIVATE_KEY }}
          port: ${{ secrets.DEV_PORT }}
          script: |
            cd formflet
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }}
            docker stop server || true
            docker rm server || true
            docker system prune -a --volumes -f
            docker compose pull -q
            docker compose up --force-recreate --build -d --quiet-pull 2>log.out
            cat log.out